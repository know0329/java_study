package staticValue;

/*
 <변수 종류>
 
 변수명		|선언위치			|사용범위				|메모리		|생성과 소멸
 ----------------------------------------------------------------------------------------
 지역변수		|함수 내부에서 선언	|함수 내부에서만 사용		|스택			|함수가 호출될 떄 생성되고 
(로컬변수)		|				|					|			|함수가 끝나면 소멸
 ----------------------------------------------------------------------------------------
 멤버 변수 	|클래스 멤버변수로	|클래스 내부에서 사용		|			|인스턴스가 생성될 떄 힙에 생성
(인스턴스 변수)	|선언				|private이 아니라면		|힙			|가비지 컬렉터가 메모리를 수거할 떄
			|				|다른 클래스에서 사용가능	|			|소멸됨(c나 c++은 소멸자를 사용해야 소멸)
-----------------------------------------------------------------------------------------		
static 변수	|static 예약어를	|클래스 내부에서 사용		|			|프로그램이 처음 시작할 떄 	상수와 함께
(클래스 변수)	|사용하여 클래스 내부	|private이 아니라면		|데이터 영역	|데이터 영역에 생성되고 프로그램이 끝나고
			|에 선언			|다른 클래스에서 사용가능	|			|메모리를 해제할 때 소멸됨
-----------------------------------------------------------------------------------------
 */







/*
 <static 설명>
 1.static : 인스턴스가 공유하는 값을 선언할 때 static변수를 사용, 자바에서는 static변수들을 클래스 변수라고도 부른다. 
   그래서 이용할 떄 '인스턴스명.static변수'로 쓰지 않고 'class명.static변수'로 사용한다. (인스턴스가 힙 메모리에 잡히기 전에 static 변수가 먼저 생성되기 떄문에)
 2.인스턴스들은 힙 메모리를 이용하는데 static의 경우 data영역의 다른 메모리를 사용
 3.static의 경우 프로그램이 load될 때 데이터영역의 메모리를 할당받음(상수,리터럴도 동일)
 4.static 자료형 변수이름
 5.점점 변화되는 값(ex.학번)이 필요할 때 기준이 되는 값도 필요하다. 그 때 기준이 되는 값을 멤버변수로 잡아버린다면,
   각 인스턴스마다 변화되는 값이 달라지기 때문에 이때 static을 사용한다.
 */


/*
 static 메서드에서는 인스턴스 변수(멤버변수)를 사용할 수 없다. -> 인스턴스 변수의 경우 생성자가 불렸을 때 생성이 되어지는데 static은 new없이도 생성이 되기 때문에
 인스턴스 변수를 사용할 수 없다. (생성이 불확실하기 때문에)
 */

/*
 예) Student를 생성할 때마다 아이디가 자동으로 증가했으면 좋겠다.-> static 사용
 */

public class Student {

	private static int serialNum = 10000;
	int studentID;
	String studentName;
	
	
	public Student() {
		this.serialNum++;
		this.studentID = serialNum;
	}


	public static int getSerialNum() {
		return serialNum;
	}


	public static void setSerialNum(int serialNum) {
		Student.serialNum = serialNum;
	}
	
}
